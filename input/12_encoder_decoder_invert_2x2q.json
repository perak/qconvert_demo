{
	"numQubits": 4,
	"params": [],
	"options": {
		"params": {},
		"hybrid": false,
		"hybridOptions": {
			"optimizer": "Powell",
			"tolerance": 0.001,
			"costFunction": {
				"python": "",
				"javascript": ""
			}
		},
		"encoderDecoder": true,
		"encoderDecoderOptions": {
			"functionName": "",
			"inputEncoding": {
				"type": "basis",
				"customFunction": {
					"python": "def custom_encoder(input_data_row, input_encoding):\n    qasm = \"\"\n    qasm += \"OPENQASM 2.0;\\n\"\n    qasm += \"include \\\"qelib1.inc\\\";\\n\"\n\n    # ...\n\n    return qasm\n",
					"javascript": "function customEncoder(inputDataRow, inputEncoding) {\n    let qasm = \"\";\n    qasm += \"OPENQASM 2.0;\\n\";\n    qasm += \"include \\\"qelib1.inc\\\";\\n\";\n    \n    // ...\n    \n    return qasm;\n}\n"
				},
				"qubitOffset": 0,
				"colDefs": [
					{
						"name": "a",
						"structure": "scalar",
						"dimensions": [],
						"type": "integer",
						"min": "0",
						"max": "3",
						"bits": 2
					},
					{
						"name": "b",
						"structure": "scalar",
						"dimensions": [],
						"type": "integer",
						"min": "0",
						"max": "3",
						"bits": 2
					}
				],
				"data": [
					{
						"a": 0,
						"b": 0
					},
					{
						"a": 1,
						"b": 0
					},
					{
						"a": 2,
						"b": 0
					},
					{
						"a": 3,
						"b": 0
					},
					{
						"a": 0,
						"b": 1
					},
					{
						"a": 1,
						"b": 1
					},
					{
						"a": 2,
						"b": 1
					},
					{
						"a": 3,
						"b": 1
					},
					{
						"a": 0,
						"b": 2
					},
					{
						"a": 1,
						"b": 2
					},
					{
						"a": 2,
						"b": 2
					},
					{
						"a": 3,
						"b": 2
					},
					{
						"a": 0,
						"b": 3
					},
					{
						"a": 1,
						"b": 3
					},
					{
						"a": 2,
						"b": 3
					},
					{
						"a": 3,
						"b": 3
					}
				]
			},
			"outputDecoding": {
				"type": "basis",
				"customFunction": {
					"python": "def custom_decoder(counts, output_decoding):\n    output_data_row = {}\n\n    # ...\n    \n    return output_data_row\n",
					"javascript": "function customDecoder(counts, outputDecoding) {\n    outputDataRow = {};\n    \n    // ...\n    \n    return outputDataRow;\n}\n"
				},
				"qubitOffset": 0,
				"colDefs": [
					{
						"name": "c",
						"structure": "scalar",
						"dimensions": [],
						"type": "integer",
						"min": "0",
						"max": "3",
						"bits": 2
					},
					{
						"name": "d",
						"structure": "scalar",
						"dimensions": [],
						"type": "integer",
						"min": "0",
						"max": "3",
						"bits": 2
					}
				]
			}
		}
	},
	"gates": [
		[
			{
				"id": "hCE3kC4juDJJSduNnu",
				"name": "x",
				"connector": 0,
				"options": {
					"params": {}
				}
			}
		],
		[
			{
				"id": "qFD7AxLfWaf65EE5Zk",
				"name": "x",
				"connector": 0,
				"options": {
					"params": {}
				}
			}
		],
		[
			{
				"id": "MSDiFtRzb2N93txCMw",
				"name": "x",
				"connector": 0,
				"options": {
					"params": {}
				}
			}
		],
		[
			{
				"id": "vMyvbKktmaa1gJErsg",
				"name": "x",
				"connector": 0,
				"options": {
					"params": {}
				}
			}
		]
	],
	"customGates": {},
	"cregs": {}
}