{
	"numQubits": 2,
	"params": [],
	"options": {
		"params": {},
		"hybrid": false,
		"hybridOptions": {
			"optimizer": "Powell",
			"tolerance": 0.001,
			"costFunction": {
				"python": "",
				"javascript": ""
			}
		},
		"encoderDecoder": false,
		"encoderDecoderOptions": {
			"functionName": "",
			"inputEncoding": {
				"type": "custom",
				"customFunction": {
					"python": "def custom_encoder(input_data_row, input_encoding):\n    qasm = \"\"\n    qasm += \"OPENQASM 2.0;\\n\"\n    qasm += \"include \\\"qelib1.inc\\\";\\n\"\n\n    # ...\n\n    return qasm\n",
					"javascript": "function customEncoder(inputDataRow, inputEncoding) {\n    let qasm = \"\";\n    qasm += \"OPENQASM 2.0;\\n\";\n    qasm += \"include \\\"qelib1.inc\\\";\\n\";\n    \n    // ...\n    \n    return qasm;\n}\n"
				},
				"qubitOffset": 0,
				"colDefs": [],
				"data": []
			},
			"outputDecoding": {
				"type": "custom",
				"customFunction": {
					"python": "def custom_decoder(counts, output_decoding):\n    output_data_row = {}\n\n    # ...\n    \n    return output_data_row\n",
					"javascript": "function customDecoder(counts, outputDecoding) {\n    outputDataRow = {};\n    \n    // ...\n    \n    return outputDataRow;\n}\n"
				},
				"qubitOffset": 0,
				"colDefs": []
			}
		}
	},
	"gates": [
		[
			{
				"id": "VqdOUecYfuRSjmYKKp",
				"name": "bell",
				"connector": 0,
				"options": {
					"params": {},
					"condition": {}
				}
			},
			{
				"id": "hnQtpGrXmSTuB3vqz9",
				"name": "measure",
				"connector": 0,
				"options": {
					"creg": {
						"name": "c",
						"bit": 0
					},
					"condition": {}
				}
			},
			null
		],
		[
			{
				"id": "VqdOUecYfuRSjmYKKp",
				"name": "bell",
				"connector": 1,
				"options": {
					"params": {},
					"condition": {}
				}
			},
			null,
			{
				"id": "W64WAQCBP3GM6bSKyC",
				"name": "measure",
				"connector": 0,
				"options": {
					"creg": {
						"name": "c",
						"bit": 1
					},
					"condition": {}
				}
			}
		]
	],
	"customGates": {
		"bell": {
			"numQubits": 2,
			"params": [],
			"options": {
				"params": {},
				"hybrid": false,
				"hybridOptions": {
					"optimizer": "Powell",
					"tolerance": 0.001,
					"costFunction": {
						"python": "",
						"javascript": ""
					}
				},
				"encoderDecoder": false,
				"encoderDecoderOptions": {
					"functionName": "",
					"inputEncoding": {
						"type": "custom",
						"customFunction": {
							"python": "def custom_encoder(input_data_row, input_encoding):\n    qasm = \"\"\n    qasm += \"OPENQASM 2.0;\\n\"\n    qasm += \"include \\\"qelib1.inc\\\";\\n\"\n\n    # ...\n\n    return qasm\n",
							"javascript": "function customEncoder(inputDataRow, inputEncoding) {\n    let qasm = \"\";\n    qasm += \"OPENQASM 2.0;\\n\";\n    qasm += \"include \\\"qelib1.inc\\\";\\n\";\n    \n    // ...\n    \n    return qasm;\n}\n"
						},
						"qubitOffset": 0,
						"colDefs": [],
						"data": []
					},
					"outputDecoding": {
						"type": "custom",
						"customFunction": {
							"python": "def custom_decoder(counts, output_decoding):\n    output_data_row = {}\n\n    # ...\n    \n    return output_data_row\n",
							"javascript": "function customDecoder(counts, outputDecoding) {\n    outputDataRow = {};\n    \n    // ...\n    \n    return outputDataRow;\n}\n"
						},
						"qubitOffset": 0,
						"colDefs": []
					}
				}
			},
			"gates": [
				[
					{
						"id": "aaWZcH5NJ9QG7amxdb",
						"name": "h",
						"connector": 0,
						"options": {
							"params": {}
						}
					},
					{
						"id": "VLpjc7nwj0mhLBU6nt",
						"name": "cx",
						"connector": 0,
						"options": {
							"params": {}
						}
					}
				],
				[
					null,
					{
						"id": "VLpjc7nwj0mhLBU6nt",
						"name": "cx",
						"connector": 1,
						"options": {
							"params": {}
						}
					}
				]
			],
			"customGates": {},
			"cregs": {}
		}
	},
	"cregs": {
		"c": [
			1,
			1
		]
	}
}