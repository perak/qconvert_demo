{
	"numQubits": 2,
	"params": [
		"var0",
		"var1",
		"var2"
	],
	"options": {
		"params": {
			"var0": 0,
			"var1": 0,
			"var2": 0
		},
		"hybrid": true,
		"hybridOptions": {
			"optimizer": "Powell",
			"tolerance": 0.001,
			"costFunction": {
				"python": "cost = 0\ncost += np.abs(counts[\"00\"] / shots - 0.5)\ncost += np.abs(counts[\"11\"] / shots - 0.5)",
				"javascript": "cost = 0;\ncost += Math.abs((counts[\"00\"] || 0) / shots - 0.5);\ncost += Math.abs((counts[\"11\"] || 0) / shots - 0.5);"
			}
		},
		"encoderDecoder": false,
		"encoderDecoderOptions": {
			"functionName": "",
			"inputEncoding": {
				"type": "custom",
				"customFunction": {
					"python": "def custom_encoder(input_data_row, input_encoding):\n    qasm = \"\"\n    qasm += \"OPENQASM 2.0;\\n\"\n    qasm += \"include \\\"qelib1.inc\\\";\\n\"\n\n    # ...\n\n    return qasm\n",
					"javascript": "function customEncoder(inputDataRow, inputEncoding) {\n    let qasm = \"\";\n    qasm += \"OPENQASM 2.0;\\n\";\n    qasm += \"include \\\"qelib1.inc\\\";\\n\";\n    \n    // ...\n    \n    return qasm;\n}\n"
				},
				"qubitOffset": 0,
				"colDefs": [],
				"data": []
			},
			"outputDecoding": {
				"type": "custom",
				"customFunction": {
					"python": "def custom_decoder(counts, output_decoding):\n    output_data_row = {}\n\n    # ...\n    \n    return output_data_row\n",
					"javascript": "function customDecoder(counts, outputDecoding) {\n    outputDataRow = {};\n    \n    // ...\n    \n    return outputDataRow;\n}\n"
				},
				"qubitOffset": 0,
				"colDefs": []
			}
		}
	},
	"gates": [
		[
			{
				"id": "EvGb3GcFyfDGOj1BQo",
				"name": "sub",
				"connector": 0,
				"options": {
					"params": {
						"var0": "var0",
						"var1": "var1",
						"var2": "var2"
					},
					"hybrid": false,
					"encoderDecoder": false
				}
			},
			{
				"id": "uEkyDCXC4s5wXcYH9n",
				"name": "measure",
				"connector": 0,
				"options": {
					"params": {},
					"creg": {
						"bit": 0,
						"name": "c"
					}
				}
			},
			null
		],
		[
			{
				"id": "EvGb3GcFyfDGOj1BQo",
				"name": "sub",
				"connector": 1,
				"options": {
					"params": {
						"var0": "var0",
						"var1": "var1",
						"var2": "var2"
					},
					"hybrid": false,
					"encoderDecoder": false
				}
			},
			null,
			{
				"id": "WKwQVudiqenUW2r1fd",
				"name": "measure",
				"connector": 0,
				"options": {
					"params": {},
					"creg": {
						"bit": 1,
						"name": "c"
					}
				}
			}
		]
	],
	"customGates": {
		"sub": {
			"numQubits": 2,
			"params": [
				"var0",
				"var1",
				"var2"
			],
			"options": {
				"params": {
					"var0": "0",
					"var1": "0",
					"var2": "0"
				},
				"hybrid": false,
				"encoderDecoder": false
			},
			"gates": [
				[
					{
						"id": "X8RMGsxjVlqF6t8dc3",
						"name": "u3",
						"connector": 0,
						"options": {
							"params": {
								"theta": "var0",
								"phi": "var1",
								"lambda": "var2"
							}
						}
					},
					{
						"id": "vTIczSX8eiGr4TCsno",
						"name": "cx",
						"connector": 0,
						"options": {
							"params": {}
						}
					}
				],
				[
					null,
					{
						"id": "vTIczSX8eiGr4TCsno",
						"name": "cx",
						"connector": 1,
						"options": {
							"params": {}
						}
					}
				]
			],
			"customGates": {},
			"cregs": {}
		}
	},
	"cregs": {
		"c": [
			0,
			0
		]
	}
}